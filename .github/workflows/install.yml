# Name workflow in pipeline
name: (Monorepo - NodeJS and ReactJS) Install deps and Lint

# Workflow sharing policy
on:
  workflow_call:
    inputs:
      reusable_runner_image:
        description: 'Declare image runner to steps'
        required: true
        type: string
      reusable_package_manager:
        description: 'Declare the package manager as used, yarn or npm'
        required: true
        type: string
      # reusable_action_setup_node_version:
      #   description: 'Version of actions/setup-node to use'
      #   required: true
      #   type: string
      # reusable_node_version:
      #   description: 'Version of nodeJS to use'
      #   required: true
      #   type: string
      # reusable_npm_install_args:
      #   description: 'Arguments of yarn install to use'
      #   required: false
      #   type: string
      # reusable_yarn_install_args:
      #   description: 'Arguments of yarn install to use'
      #   required: false
      #   type: string

jobs:
  # Specific environment settings
  reusable_config_environment:
    name: Configure environment
    runs-on: ${{ inputs.reusable_runner_image }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify value package manager
        run: |
          if [[ "${{ github.event.inputs.reusable_package_manager }}" == "yarn" ]]; then
            echo "Install packages with Yarn..."
          elif [[ "${{ github.event.inputs.reusable_package_manager }}" == "npm" ]]; then
            echo "Install packages with npm..."
          else
            echo "Invalid package manager specified. Please use 'npm' or 'yarn'."
            exit 1
          fi

  # # Installation of dependencies via npm for building the application
  # call_npm_install_dependencies:
  #   name: Node Install dependencies
  #   runs-on: ${{ inputs.call_runner_image }}
  #   if: github.event.inputs.package_manager == "npm"
  #   needs:
  #     - call_config_environment
  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@'${{ inputs.call_action_harden_version }}'
  #       with:
  #         egress-policy: audit

  #     - name: Checkout repository
  #       uses: actions/checkout@'${{ inputs.call_action_checkout_version }}'

  #     - name: use node.js ${{ inputs.call_node_version }}
  #       uses: actions/setup-node@'${{ inputs.call_action_setup_node_version }}'
  #       with:
  #         node-version: ${{ inputs.call_node_version }}
  #         cache: npm

  #     - name: Cache dependencies NPM
  #       uses: actions/cache@v4
  #       id: npm-cache
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies
  #       run: npm install ${{ inputs.call_npm_install_args }}

  # # Installation of dependencies via yarn for building the application
  # call_yarn_install_dependencies:
  #   name: Node Install dependencies
  #   runs-on: ${{ inputs.call_runner_image }}
  #   if: github.event.inputs.package_manager == "yarn"
  #   needs:
  #     - call_config_environment
  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@'${{ inputs.call_action_harden_version }}'
  #       with:
  #         egress-policy: audit

  #     - name: Checkout repository
  #       uses: actions/checkout@'${{ inputs.call_action_checkout_version }}'

  #     - name: use node.js ${{ inputs.call_node_version }}
  #       uses: actions/setup-node@'${{ inputs.call_action_setup_node_version }}'
  #       with:
  #         node-version: ${{ inputs.call_node_version }}
  #         cache: yarn

  #     - name: Cache dependencies YARN
  #       uses: actions/cache@v4
  #       id: yarn-cache
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     - name: Install dependencies
  #       run: yarn install ${{ inputs.call_yarn_install_args }}

  # Code Syntax Validations
  # call_lint:
  #   name: Lint
  #   runs-on: ${{ inputs.call_runner_image }}
  #   steps:
  #     - name: Harden Runner
  #       uses: step-security/harden-runner@'${{ inputs.call_action_harden_version }}'
  #       with:
  #         egress-policy: audit

  #     - name: Checkout repository
  #       uses: actions/checkout@'${{ inputs.call_action_checkout_version }}'